[package]
name = "sprit-mutilagent"
version = "0.3.2"
edition = "2021"
description = "A robust command-line toolkit for managing multiple AI coding agents in isolated tmux sessions with comprehensive workspace management and health monitoring"
authors = ["hotaq hootoo2016@gmail.com"]
license = "MIT"
repository = "https://github.com/hotaq/Sprit-mutil"
homepage = "https://github.com/hotaq/Sprit-mutil"
documentation = "https://docs.rs/sprite"
readme = "README.md"
keywords = ["cli", "multi-agent", "ai", "tmux", "workspace"]
categories = ["command-line-utilities", "development-tools", "command-line-interface"]
# publish = ["github"]  # Commented out to allow crates.io publishing
rust-version = "1.75"
include = [
    "src/**/*.rs",
    "src/templates/**",
    "Cargo.toml",
    "README.md",
    "LICENSE",
    "agents/profiles/*.sh"
]

[[bin]]
name = "sprite"
path = "src/main.rs"

[[bin]]
name = "test_delivery_manual"
path = "test_delivery_manual.rs"

[[bin]]
name = "debug_tmux_test"
path = "debug_tmux_test.rs"

[[bin]]
name = "test_claude_commands"
path = "test_claude_commands.rs"

[lib]
name = "sprite"
path = "src/lib.rs"

[dependencies]
clap = { version = "4.0", features = ["derive"] }
serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.9"
serde_json = "1.0"
anyhow = "1.0"
thiserror = "1.0"
tokio = { version = "1.0", features = ["full"] }
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.0", features = ["v4"] }
log = { version = "0.4", features = ["std"] }
pathdiff = "0.2"
reqwest = { version = "0.11", features = ["json", "blocking"] }
semver = "1.0"
sha2 = "0.10"
tempfile = "3.0"

[target.'cfg(unix)'.dependencies]
libc = "0.2"

[dev-dependencies]
# Core testing utilities
tempfile = "3.0"
assert_cmd = "2.0"
assert_fs = "1.0"
predicates = "3.0"

# Mocking and test doubles
mockall = "0.12"
wiremock = "0.6"
tokio-test = "0.4"

# Property-based testing
proptest = "1.4"
quickcheck = "1.0"

# Test utilities and fixtures
fake = { version = "2.9", features = ["derive"] }
rand = "0.8"
pretty_assertions = "1.4"

# HTTP API testing
reqwest = { version = "0.11", features = ["json"] }
serde_json = "1.0"

# Async testing
futures = "0.3"

# Performance testing
criterion = { version = "0.5", features = ["html_reports"] }

# Test utilities
walkdir = "2.4"

# Benchmarks are kept locally for development
# [[bench]]
# name = "performance_benchmarks"
# harness = false
